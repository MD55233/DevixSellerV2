{"version":3,"file":"static/js/426.d3c1e745.chunk.js","mappings":"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","sources":["views/pages/WithDraw.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  Box,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from '@mui/material';\r\nimport { useAuth } from 'views/pages/authentication/AuthContext';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion'; // Ensure framer-motion is installed\r\n\r\nconst WithdrawBalance = () => {\r\n  const { username } = useAuth(); // Get the username from auth context\r\n  const navigate = useNavigate();\r\n\r\n  const [withdrawAmount, setWithdrawAmount] = useState('');\r\n  const [selectedWallet, setSelectedWallet] = useState('');\r\n  const [wallets, setWallets] = useState([]); // State to store fetched wallets\r\n  const [accountNumber, setAccountNumber] = useState(''); // Initialize account number\r\n  const [accountTitle, setAccountTitle] = useState(''); // Initialize account title\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [dialogOpen, setDialogOpen] = useState(false); // State for dialog open/close\r\n  const [confirmationData, setConfirmationData] = useState(null); // Store data for confirmation\r\n  const [showSuccess, setShowSuccess] = useState(false); // State to show success message\r\n\r\n  // Fetch user wallets on component mount\r\n  useEffect(() => {\r\n    const fetchWallets = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_HOST}/api/user-accounts/${username}`);\r\n        setWallets(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching wallets:', error);\r\n      }\r\n    };\r\n    fetchWallets();\r\n  }, [username]);\r\n\r\n  const handleWalletChange = (event) => {\r\n    const walletId = event.target.value;\r\n    const wallet = wallets.find((w) => w._id === walletId);\r\n    setSelectedWallet(walletId);\r\n    setAccountNumber(wallet ? wallet.accountNumber : ''); // Set account number\r\n    setAccountTitle(wallet ? wallet.accountTitle : '');   // Set account title\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    // Prepare the data for confirmation\r\n    const formData = {\r\n      username,\r\n      withdrawAmount,\r\n      gateway: wallets.find((w) => w._id === selectedWallet)?.gateway || '', // Fetch gateway from selected wallet\r\n      accountNumber,\r\n      accountTitle,\r\n    };\r\n\r\n    // Set confirmation data and open the dialog\r\n    setConfirmationData(formData);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token'); // Assuming you store the token in local storage\r\n      const response = await axios.post(`${process.env.REACT_APP_API_HOST}/api/withdraw-balance`, confirmationData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Include the token in the Authorization header\r\n        },\r\n      });\r\n      console.log('Withdrawal request submitted:', response.data);\r\n      \r\n      // Reset form state after submission\r\n      setWithdrawAmount('');\r\n      setSelectedWallet('');\r\n      setAccountNumber(''); // Reset account number\r\n      setAccountTitle(''); // Reset account title\r\n      setShowSuccess(true); // Show success message in dialog\r\n    } catch (error) {\r\n      console.error('Error submitting withdrawal request:', error);\r\n      setErrorMessage('Error submitting form. Please try again.');\r\n      setDialogOpen(false); // Close the dialog in case of error\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setDialogOpen(false); // Close the dialog without taking action\r\n  };\r\n\r\n  const handleAddWallet = () => {\r\n    navigate('/wallet/add'); // Navigate to the add wallet page\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} justifyContent=\"center\">\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h3\" gutterBottom sx={{ color: 'secondary.main', textAlign: 'center' }}>\r\n          Withdraw Balance\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <Paper elevation={3} sx={{ padding: 2 }}>\r\n          {wallets.length === 0 ? ( // Check if there are wallets available\r\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n              <Typography variant=\"h6\" color=\"text.secondary\" sx={{ marginBottom: 2 }}>\r\n                No wallets added. Please add a wallet to proceed.\r\n              </Typography>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleAddWallet}>\r\n                Add Wallet\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"withdrawAmount\"\r\n                label=\"Withdraw Amount\"\r\n                type=\"number\"\r\n                value={withdrawAmount}\r\n                onChange={(e) => setWithdrawAmount(e.target.value)}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n\r\n              <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\r\n                <InputLabel id=\"wallet-label\">Select Wallet</InputLabel>\r\n                <Select\r\n                  labelId=\"wallet-label\"\r\n                  id=\"wallet\"\r\n                  value={selectedWallet}\r\n                  onChange={handleWalletChange}\r\n                  label=\"Select Wallet\"\r\n                >\r\n                  {wallets.map((wallet) => (\r\n                    <MenuItem key={wallet._id} value={wallet._id}>\r\n                      {wallet.gateway}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"accountNumber\"\r\n                label=\"Account Number\"\r\n                value={accountNumber}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                disabled // Disable to prevent manual entry\r\n              />\r\n\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"accountTitle\"\r\n                label=\"Account Title\"\r\n                value={accountTitle}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                disabled // Disable to prevent manual entry\r\n              />\r\n\r\n              <Box display=\"flex\" justifyContent=\"center\" sx={{ marginTop: 2 }}>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!withdrawAmount || !selectedWallet}>\r\n                  Submit Withdraw Request\r\n                </Button>\r\n                <Button variant=\"outlined\" onClick={handleAddWallet} sx={{ marginLeft: 2 }}>\r\n                  Add More Wallet\r\n                </Button>\r\n              </Box>\r\n            </form>\r\n          )}\r\n\r\n          {errorMessage && (\r\n            <Typography variant=\"h6\" color=\"error.main\" sx={{ marginTop: 2, textAlign: 'center' }}>\r\n              {errorMessage}\r\n            </Typography>\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n\r\n      {/* Confirmation Dialog */}\r\n      <Dialog open={dialogOpen} onClose={handleCancel}>\r\n        <DialogTitle>Confirm Withdrawal</DialogTitle>\r\n        <DialogContent>\r\n          {!showSuccess ? (\r\n            <DialogContentText>\r\n              Are you sure you want to withdraw {withdrawAmount} using the selected wallet? This action cannot be undone.\r\n            </DialogContentText>\r\n          ) : (\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.5 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0 }}\r\n              transition={{ duration: 0.5 }}\r\n              style={{ textAlign: 'center', marginTop: 20 }}\r\n            >\r\n              <div style={{\r\n                display: 'inline-flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                width: '70px',\r\n                height: '70px',\r\n                borderRadius: '50%',\r\n                margin: '0 auto',\r\n              }}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"#13E880\"\r\n                  width=\"64px\"\r\n                  height=\"64px\"\r\n                >\r\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"#13E880\" strokeWidth=\"2\" />\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2l4-4\" />\r\n                </svg>\r\n              </div>\r\n              <Typography variant=\"h6\" color=\"success.main\" sx={{ marginTop: 2 }}>\r\n                Your withdrawal request has been submitted and is waiting for approval.\r\n              </Typography>\r\n            </motion.div>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\" disabled={showSuccess}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={showSuccess ? handleCancel : handleConfirm} color=\"primary\">\r\n            {showSuccess ? 'Close' : 'Confirm'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WithdrawBalance;\r\n"],"names":["WithdrawBalance","username","useAuth","navigate","useNavigate","withdrawAmount","setWithdrawAmount","useState","selectedWallet","setSelectedWallet","wallets","setWallets","accountNumber","setAccountNumber","accountTitle","setAccountTitle","errorMessage","setErrorMessage","dialogOpen","setDialogOpen","confirmationData","setConfirmationData","showSuccess","setShowSuccess","useEffect","async","response","axios","data","error","console","fetchWallets","handleCancel","handleAddWallet","_jsxs","Grid","container","spacing","justifyContent","children","_jsx","item","xs","Typography","variant","gutterBottom","sx","color","textAlign","sm","Paper","elevation","padding","length","Box","display","flexDirection","alignItems","marginBottom","Button","onClick","onSubmit","event","_wallets$find","preventDefault","formData","gateway","find","w","_id","TextField","required","fullWidth","id","label","type","value","onChange","e","target","margin","FormControl","InputLabel","Select","labelId","walletId","wallet","map","MenuItem","disabled","marginTop","marginLeft","Dialog","open","onClose","DialogTitle","DialogContent","motion","initial","opacity","scale","animate","exit","transition","duration","style","width","height","borderRadius","xmlns","fill","viewBox","stroke","cx","cy","r","strokeWidth","strokeLinecap","strokeLinejoin","d","DialogContentText","DialogActions","token","localStorage","getItem","headers","Authorization","log"],"sourceRoot":""}