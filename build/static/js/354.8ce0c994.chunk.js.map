{"version":3,"file":"static/js/354.8ce0c994.chunk.js","mappings":"8QAkFA,UAlE6BA,KAC3B,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MACdC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAkBnC,OAhBAK,EAAAA,EAAAA,YAAU,KAC0BC,WAChC,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAW,0DAAqEZ,KACvGG,EAAWQ,EAASE,KAMtB,CALE,MAAON,GACPO,QAAQP,MAAM,yCAA0CA,GACxDC,EAAS,2DACX,CAAC,QACCF,GAAW,EACb,GAGFS,EAA2B,GAC1B,CAACf,KAGFgB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,eAAe,SAAQC,SAAA,EACjDC,EAAAA,EAAAA,KAACL,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAGH,UAChBC,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAN,SAAC,8BAKxCC,EAAAA,EAAAA,KAACL,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAGH,SACfhB,GACCiB,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,IACfrB,GACFe,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACI,MAAM,QAAOR,SAAEd,IACN,IAAnBL,EAAQ4B,QACVR,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAAAJ,SAAC,sCAEZC,EAAAA,EAAAA,KAACS,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAMZ,UAC/BL,EAAAA,EAAAA,MAACkB,EAAAA,EAAK,CAAAb,SAAA,EACJC,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CAAAd,UACRL,EAAAA,EAAAA,MAACoB,EAAAA,EAAQ,CAAAf,SAAA,EACPC,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAhB,SAAC,UACXC,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAhB,SAAC,YACXC,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAhB,SAAC,6BACXC,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAhB,SAAC,iCAGfC,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,CAAAjB,SACPnB,EAAQqC,KAAKC,IACZxB,EAAAA,EAAAA,MAACoB,EAAAA,EAAQ,CAAAf,SAAA,EACPC,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAhB,SAAE,IAAIoB,KAAKD,EAAOE,WAAWC,wBACvC3B,EAAAA,EAAAA,MAACqB,EAAAA,EAAS,CAAAhB,SAAA,CAAC,MAAImB,EAAOI,WACtBtB,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAhB,SAAEmB,EAAOK,yBACnBvB,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAhB,SAAEmB,EAAOM,yBAJNN,EAAOO,KAAOP,EAAOE,wBAY3C,C","sources":["views/utilities/ProductHistory.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  CircularProgress,\r\n  Grid,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useAuth } from 'views/pages/authentication/AuthContext';\r\n\r\nconst ProductProfitHistory = () => {\r\n  const { username } = useAuth(); // Assuming you have a way to get the username from your auth context\r\n  const [history, setHistory] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchProductProfitHistory = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_HOST}/api/users/product-profit-history/${username}`);\r\n        setHistory(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching product profit history:', error);\r\n        setError('Error fetching product profit history. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProductProfitHistory();\r\n  }, [username]);\r\n\r\n  return (\r\n    <Grid container spacing={3} justifyContent=\"center\">\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Product Profit History\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : error ? (\r\n          <Typography color=\"error\">{error}</Typography>\r\n        ) : history.length === 0 ? (\r\n          <Typography>No product profit history found.</Typography>\r\n        ) : (\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Date</TableCell>\r\n                  <TableCell>Amount</TableCell>\r\n                  <TableCell>Direct Points Increment</TableCell>\r\n                  <TableCell>Total Points Increment</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {history.map((record) => (\r\n                  <TableRow key={record._id || record.createdAt}>\r\n                    <TableCell>{new Date(record.createdAt).toLocaleDateString()}</TableCell>\r\n                    <TableCell>Rs,{record.amount}</TableCell>\r\n                    <TableCell>{record.directPointsIncrement}</TableCell>\r\n                    <TableCell>{record.totalPointsIncrement}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductProfitHistory;\r\n"],"names":["ProductProfitHistory","username","useAuth","history","setHistory","useState","loading","setLoading","error","setError","useEffect","async","response","axios","data","console","fetchProductProfitHistory","_jsxs","Grid","container","spacing","justifyContent","children","_jsx","item","xs","Typography","variant","gutterBottom","CircularProgress","color","length","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","record","Date","createdAt","toLocaleDateString","amount","directPointsIncrement","totalPointsIncrement","_id"],"sourceRoot":""}