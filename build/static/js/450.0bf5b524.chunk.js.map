{"version":3,"file":"static/js/450.0bf5b524.chunk.js","mappings":"gMAkBA,IAbwBA,KACtBC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,GAAI,CAAEC,EAAG,GAAIC,UACjBJ,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CAACH,GAAI,CAAEI,GAAI,GAAIF,UAClBG,EAAAA,EAAAA,MAACC,EAAAA,GAAQ,CAACC,WAAW,SAASC,gBAAc,EAACR,GAAI,CAAEI,GAAI,GAAIF,SAAA,EACzDJ,EAAAA,EAAAA,KAACW,EAAAA,EAAc,CAAAP,UACbJ,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACC,QAAQ,cAAcC,MAAO,GAAIC,OAAQ,QAErDf,EAAAA,EAAAA,KAACgB,EAAAA,EAAY,CAACd,GAAI,CAAEI,GAAI,GAAKW,SAASjB,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACC,QAAQ,cAAcE,OAAQ,KAAQG,WAAWlB,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACC,QAAQ,iB,8ICF3H,MAAMM,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAiBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACnDE,SAAU,SACVC,SAAU,WACV,UAAW,CACTC,QAAS,KACTD,SAAU,WACVX,MAAO,IACPC,OAAQ,IACRY,WAAa,8BAA6BJ,EAAMK,QAAQC,QAAQC,+CAChEC,aAAc,MACdC,KAAM,GACNC,OAAQ,KAEV,WAAY,CACVP,QAAS,KACTD,SAAU,WACVX,MAAO,IACPC,OAAQ,IACRY,WAAa,6BAA4BJ,EAAMK,QAAQC,QAAQC,+CAC/DC,aAAc,MACdC,KAAM,IACNC,OAAQ,KAEX,IAmDD,UAjDeC,IAAoB,IAAnB,UAAEC,GAAWD,EAC3B,MAAM,SAAEE,IAAaC,EAAAA,EAAAA,MACdC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IAczC,OAZAC,EAAAA,EAAAA,YAAU,KACcC,WACpB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAW,2CAAsDR,KACxFG,EAAYI,EAASE,KAGvB,CAFE,MAAOC,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,GAEFE,EAAe,GACd,CAACZ,KAGFpC,EAAAA,EAAAA,KAAAiD,EAAAA,SAAA,CAAA7C,SACG+B,GACCnC,EAAAA,EAAAA,KAACD,EAAAA,EAAe,KAEhBC,EAAAA,EAAAA,KAACmB,EAAW,CAAC+B,QAAQ,EAAOxB,SAAS,EAAMtB,UACzCG,EAAAA,EAAAA,MAAC4C,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,eAAe,SAAQlD,SAAA,EACjDJ,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGpD,UAChBJ,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAAC5C,QAAQ,KAAK6C,cAAY,EAACxD,GAAI,CAAEyD,MAAO,iBAAkBC,UAAW,SAAUC,GAAI,GAAIzD,SAAC,iBAIpGkC,EAASwB,KAAKC,IACb/D,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIQ,GAAI,EAAGC,GAAI,EAAE7D,UAC9BJ,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAG,UACHG,EAAAA,EAAAA,MAAC2D,EAAAA,EAAW,CAAA9D,SAAA,EACVJ,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CAAC5C,QAAQ,KAAIT,SAAE2D,EAAQI,WAClC5D,EAAAA,EAAAA,MAACkD,EAAAA,EAAU,CAAC5C,QAAQ,QAAOT,SAAA,CAAC,mBAAiB2D,EAAQK,kBACrD7D,EAAAA,EAAAA,MAACkD,EAAAA,EAAU,CAAC5C,QAAQ,QAAOT,SAAA,CAAC,kBAAgB2D,EAAQM,sBALpBN,EAAQO,aAarD,C,uHCtEA,SAASC,EAAQC,GACtB,OAAOC,OAAOD,GAAOE,MAAM,oBAAoB,IAAM,EACvD,CAGO,SAASC,EAAWC,GACzB,OAAOC,WAAWD,EACpB,C,sDCZO,SAASE,EAAwBC,GACtC,OAAOC,EAAAA,EAAAA,GAAqB,cAAeD,EAC7C,EACwBE,EAAAA,EAAAA,GAAuB,cAAe,CAAC,OAAQ,OAAQ,cAAe,UAAW,WAAY,QAAS,OAAQ,eAAgB,aAAc,eACpK,I,SCFA,MAAMC,EAAY,CAAC,YAAa,YAAa,YAAa,SAAU,QAAS,UAAW,SACxF,IACEC,EACAC,EACAC,EACAC,EAJEC,EAAIC,GAAKA,EAeb,MAcMC,GAAgBC,EAAAA,EAAAA,IAAUP,IAAOA,EAAKI,CAAE;;;;;;;;;;;;IAaxCI,GAAeD,EAAAA,EAAAA,IAAUN,IAAQA,EAAMG,CAAE;;;;;;;;;;;;;IAczCK,GAAexE,EAAAA,EAAAA,IAAO,OAAQ,CAClCyE,KAAM,cACNd,KAAM,OACNe,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMF,EAAOC,EAAWpF,UAAmC,IAAzBoF,EAAWE,WAAuBH,EAAOC,EAAWE,WAAYF,EAAWG,aAAeJ,EAAOK,aAAcJ,EAAWG,cAAgBH,EAAWnF,OAASkF,EAAOM,WAAYL,EAAWG,cAAgBH,EAAWlF,QAAUiF,EAAOO,WAAW,GAPnRnF,EASlBE,IAGG,IAHF,MACFC,EAAK,WACL0E,GACD3E,EACC,MAAMkF,EAAajC,EAAQhD,EAAMkF,MAAM1E,eAAiB,KAClD2E,EAAc/B,EAAWpD,EAAMkF,MAAM1E,cAC3C,OAAO4E,EAAAA,EAAAA,GAAS,CACdC,QAAS,QAETC,gBAAiBtF,EAAMuF,KAAOvF,EAAMuF,KAAKlF,QAAQhB,SAASmG,IAAKC,EAAAA,EAAAA,IAAMzF,EAAMK,QAAQqF,KAAKhG,QAAgC,UAAvBM,EAAMK,QAAQsF,KAAmB,IAAO,KACzInG,OAAQ,SACgB,SAAvBkF,EAAWpF,SAAsB,CAClCsG,UAAW,EACXC,aAAc,EACdrG,OAAQ,OACRsG,gBAAiB,QACjBC,UAAW,iBACXvF,aAAe,GAAE2E,IAAcF,KAAce,KAAKC,MAAMd,EAAc,GAAM,IAAM,KAAKF,IACvF,iBAAkB,CAChB9E,QAAS,aAEa,aAAvBuE,EAAWpF,SAA0B,CACtCkB,aAAc,OACU,YAAvBkE,EAAWpF,SAAyB,CACrCkB,cAAeR,EAAMuF,MAAQvF,GAAOkF,MAAM1E,cACzCkE,EAAWG,aAAe,CAC3B,QAAS,CACPqB,WAAY,WAEbxB,EAAWG,cAAgBH,EAAWnF,OAAS,CAChD4G,SAAU,eACTzB,EAAWG,cAAgBH,EAAWlF,QAAU,CACjDA,OAAQ,QACR,IACDmB,IAAA,IAAC,WACF+D,GACD/D,EAAA,MAA8B,UAAzB+D,EAAWE,YAAyBwB,EAAAA,EAAAA,IAAItC,IAAQA,EAAME,CAAE;mBAC3C;OACXE,EAAc,IAAEmC,IAAA,IAAC,WACvB3B,EAAU,MACV1E,GACDqG,EAAA,MAA8B,SAAzB3B,EAAWE,YAAwBwB,EAAAA,EAAAA,IAAIrC,IAAQA,EAAMC,CAAE;;;;;;;;qBAQxC;;;;YAIT;;;;;;;;;;;OAWJI,GAAepE,EAAMuF,MAAQvF,GAAOK,QAAQiG,OAAOC,MAAM,IAuFjE,MAtF8BC,EAAAA,YAAiB,SAAkBC,EAASC,GACxE,MAAMlC,GAAQmC,EAAAA,EAAAA,GAAc,CAC1BnC,MAAOiC,EACPnC,KAAM,iBAEF,UACFM,EAAY,QAAO,UACnBgC,EAAS,UACTC,EAAY,OAAM,OAClBrH,EAAM,MACNsH,EAAK,QACLxH,EAAU,OAAM,MAChBC,GACEiF,EACJuC,GAAQC,EAAAA,EAAAA,GAA8BxC,EAAOb,GACzCe,GAAaU,EAAAA,EAAAA,GAAS,CAAC,EAAGZ,EAAO,CACrCI,YACAiC,YACAvH,UACAuF,YAAaoC,QAAQF,EAAMlI,YAEvBqI,EAxIkBxC,KACxB,MAAM,QACJwC,EAAO,QACP5H,EAAO,UACPsF,EAAS,YACTC,EAAW,MACXtF,EAAK,OACLC,GACEkF,EACEyC,EAAQ,CACZxC,KAAM,CAAC,OAAQrF,EAASsF,EAAWC,GAAe,eAAgBA,IAAgBtF,GAAS,aAAcsF,IAAgBrF,GAAU,eAErI,OAAO4H,EAAAA,EAAAA,GAAeD,EAAO5D,EAAyB2D,EAAQ,EA4H9CG,CAAkB3C,GAClC,OAAoBjG,EAAAA,EAAAA,KAAK4F,GAAce,EAAAA,EAAAA,GAAS,CAC9CkC,GAAIT,EACJH,IAAKA,EACLE,WAAWW,EAAAA,EAAAA,GAAKL,EAAQvC,KAAMiC,GAC9BlC,WAAYA,GACXqC,EAAO,CACRD,OAAO1B,EAAAA,EAAAA,GAAS,CACd7F,QACAC,UACCsH,KAEP,G","sources":["ui-component/cards/Skeleton/TotalIncomeCard.js","views/wallet/Wallet.js","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js"],"sourcesContent":["// material-ui\nimport { Card, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@mui/material';\n\n// ==============================|| SKELETON - TOTAL INCOME DARK/LIGHT CARD ||============================== //\n\nconst TotalIncomeCard = () => (\n  <Card sx={{ p: 2 }}>\n    <List sx={{ py: 0 }}>\n      <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n        <ListItemAvatar>\n          <Skeleton variant=\"rectangular\" width={44} height={44} />\n        </ListItemAvatar>\n        <ListItemText sx={{ py: 0 }} primary={<Skeleton variant=\"rectangular\" height={20} />} secondary={<Skeleton variant=\"text\" />} />\n      </ListItem>\n    </List>\n  </Card>\n);\n\nexport default TotalIncomeCard;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography, Grid, Card, CardContent } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport axios from 'axios';\nimport { useAuth } from 'views/pages/authentication/AuthContext';\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n  overflow: 'hidden',\n  position: 'relative',\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n    borderRadius: '50%',\n    top: -30,\n    right: -180\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n    borderRadius: '50%',\n    top: -160,\n    right: -130\n  }\n}));\n\nconst Wallet = ({ isLoading }) => {\n  const { username } = useAuth();\n  const [accounts, setAccounts] = useState([]);\n\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_HOST}/api/user-accounts/${username}`);\n        setAccounts(response.data);\n      } catch (error) {\n        console.error('Error fetching accounts:', error);\n      }\n    };\n    fetchAccounts();\n  }, [username]);\n\n  return (\n    <>\n      {isLoading ? (\n        <TotalIncomeCard />\n      ) : (\n        <CardWrapper border={false} content={false}>\n          <Grid container spacing={3} justifyContent=\"center\">\n            <Grid item xs={12}>\n              <Typography variant=\"h3\" gutterBottom sx={{ color: 'secondary.main', textAlign: 'center', mt: 2 }}>\n                My Wallets\n              </Typography>\n            </Grid>\n            {accounts.map((account) => (\n              <Grid item xs={12} sm={6} md={4} key={account._id}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h5\">{account.gateway}</Typography>\n                    <Typography variant=\"body1\">Account Number: {account.accountNumber}</Typography>\n                    <Typography variant=\"body1\">Account Title: {account.accountTitle}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </CardWrapper>\n      )}\n    </>\n  );\n};\nWallet.propTypes = {\n  isLoading: PropTypes.bool\n};\n\nexport default Wallet;\n","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;"],"names":["TotalIncomeCard","_jsx","Card","sx","p","children","List","py","_jsxs","ListItem","alignItems","disableGutters","ListItemAvatar","Skeleton","variant","width","height","ListItemText","primary","secondary","CardWrapper","styled","MainCard","_ref","theme","overflow","position","content","background","palette","warning","dark","borderRadius","top","right","_ref2","isLoading","username","useAuth","accounts","setAccounts","useState","useEffect","async","response","axios","data","error","console","fetchAccounts","_Fragment","border","Grid","container","spacing","justifyContent","item","xs","Typography","gutterBottom","color","textAlign","mt","map","account","sm","md","CardContent","gateway","accountNumber","accountTitle","_id","getUnit","input","String","match","toUnitless","length","parseFloat","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_t","_t2","_t3","_t4","_","t","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","name","overridesResolver","props","styles","ownerState","root","animation","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","shape","radiusValue","_extends","display","backgroundColor","vars","bg","alpha","text","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","visibility","maxWidth","css","_ref3","action","hover","React","inProps","ref","useThemeProps","className","component","style","other","_objectWithoutPropertiesLoose","Boolean","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}