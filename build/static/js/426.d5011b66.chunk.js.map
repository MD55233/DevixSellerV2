{"version":3,"file":"static/js/426.d5011b66.chunk.js","mappings":"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","sources":["views/pages/WithDraw.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  Box,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Card,\r\n  CardContent\r\n} from '@mui/material';\r\nimport { useAuth } from 'views/pages/authentication/AuthContext';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst WithdrawBalance = () => {\r\n  const { username } = useAuth(); // Get the username from auth context\r\n  const navigate = useNavigate();\r\n\r\n  const [withdrawAmount, setWithdrawAmount] = useState('');\r\n  const [selectedWallet, setSelectedWallet] = useState('');\r\n  const [wallets, setWallets] = useState([]); // State to store fetched wallets\r\n  const [accountNumber, setAccountNumber] = useState(''); // Initialize account number\r\n  const [accountTitle, setAccountTitle] = useState(''); // Initialize account title\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [dialogOpen, setDialogOpen] = useState(false); // State for dialog open/close\r\n  const [confirmationData, setConfirmationData] = useState(null); // Store data for confirmation\r\n  const [showSuccess, setShowSuccess] = useState(false); // State to show success message\r\n  const [withdrawalStatus, setWithdrawalStatus] = useState(true); // Default withdrawal status\r\n\r\n  // Fetch user wallets on component mount\r\n  useEffect(() => {\r\n    const fetchWallets = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_HOST}/api/user-accounts/${username}`);\r\n        setWallets(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching wallets:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch withdrawal status\r\n    const fetchWithdrawalStatus = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_HOST}/api/settings/withdrawal-status`);\r\n        setWithdrawalStatus(response.data.withdrawalEnabled); // Set status from API response\r\n      } catch (error) {\r\n        console.error('Error fetching withdrawal status:', error);\r\n      }\r\n    };\r\n\r\n    fetchWallets();\r\n    fetchWithdrawalStatus();\r\n  }, [username]);\r\n\r\n  const handleWalletChange = (event) => {\r\n    const walletId = event.target.value;\r\n    const wallet = wallets.find((w) => w._id === walletId);\r\n    setSelectedWallet(walletId);\r\n    setAccountNumber(wallet ? wallet.accountNumber : ''); // Set account number\r\n    setAccountTitle(wallet ? wallet.accountTitle : '');   // Set account title\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    // Prepare the data for confirmation\r\n    const formData = {\r\n      username,\r\n      withdrawAmount,\r\n      gateway: wallets.find((w) => w._id === selectedWallet)?.gateway || '', // Fetch gateway from selected wallet\r\n      accountNumber,\r\n      accountTitle,\r\n    };\r\n\r\n    // Set confirmation data and open the dialog\r\n    setConfirmationData(formData);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token'); // Assuming you store the token in local storage\r\n      const response = await axios.post(`${process.env.REACT_APP_API_HOST}/api/withdraw-balance`, confirmationData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Include the token in the Authorization header\r\n        },\r\n      });\r\n  \r\n      console.log('Withdrawal request submitted:', response.data);\r\n  \r\n      // Handle success response\r\n      setWithdrawAmount('');\r\n      setSelectedWallet('');\r\n      setAccountNumber(''); // Reset account number\r\n      setAccountTitle(''); // Reset account title\r\n      setShowSuccess(true); // Show success message in dialog\r\n    } catch (error) {\r\n      // Handle specific error messages from the backend\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n  \r\n        if (status === 400) {\r\n          setErrorMessage(data.message || 'Bad request. Please check your input.');\r\n        } else if (status === 403) {\r\n          setErrorMessage(data.message || 'Withdrawals are not allowed at this time.');\r\n        } else if (status === 404) {\r\n          setErrorMessage(data.message || 'User not found.');\r\n        } else {\r\n          setErrorMessage('An unexpected error occurred. Please try again.');\r\n        }\r\n      } else {\r\n        setErrorMessage('Unable to connect to the server. Please check your internet connection.');\r\n      }\r\n  \r\n      // Close the confirmation dialog in case of error\r\n      setDialogOpen(false);\r\n    }\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    setDialogOpen(false); // Close the dialog without taking action\r\n  };\r\n\r\n  const handleAddWallet = () => {\r\n    navigate('/wallet/add'); // Navigate to the add wallet page\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} justifyContent=\"center\">\r\n      {/* Display withdrawal status box at the top */}\r\n      <Grid item xs={12}>\r\n        <Card sx={{ backgroundColor: withdrawalStatus ? '#13E880' : '#F44336', color: 'white' }}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n            Withdrawals are allowed only from Monday to Thursday, between 10:00 AM and 5:00 PM.\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              {withdrawalStatus ? 'Withdrawals.' : 'Withdrawals are currently disabled. '}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h3\" gutterBottom sx={{ color: 'secondary.main', textAlign: 'center' }}>\r\n          Withdraw Balance\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <Paper elevation={3} sx={{ padding: 2 }}>\r\n          {wallets.length === 0 ? ( // Check if there are wallets available\r\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n              <Typography variant=\"h6\" color=\"text.secondary\" sx={{ marginBottom: 2 }}>\r\n                No wallets added. Please add a wallet to proceed.\r\n              </Typography>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleAddWallet}>\r\n                Add Wallet\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <form onSubmit={handleSubmit}>\r\n             <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\r\n  <InputLabel id=\"withdraw-amount-label\">Withdraw Amount</InputLabel>\r\n  <Select\r\n    labelId=\"withdraw-amount-label\"\r\n    id=\"withdrawAmount\"\r\n    value={withdrawAmount}\r\n    onChange={(e) => setWithdrawAmount(e.target.value)}\r\n    label=\"Withdraw Amount\"\r\n  >\r\n    {/* Predefined withdrawal amounts */}\r\n    <MenuItem value={750}>750</MenuItem>\r\n    <MenuItem value={1100}>1100</MenuItem>\r\n    <MenuItem value={5000}>5000</MenuItem>\r\n    <MenuItem value={17500}>17500</MenuItem>\r\n    <MenuItem value={50000}>50000</MenuItem>\r\n    <MenuItem value={110000}>110000</MenuItem>\r\n  </Select>\r\n</FormControl>\r\n\r\n\r\n              <FormControl fullWidth margin=\"normal\" variant=\"outlined\">\r\n                <InputLabel id=\"wallet-label\">Select Wallet</InputLabel>\r\n                <Select\r\n                  labelId=\"wallet-label\"\r\n                  id=\"wallet\"\r\n                  value={selectedWallet}\r\n                  onChange={handleWalletChange}\r\n                  label=\"Select Wallet\"\r\n                >\r\n                  {wallets.map((wallet) => (\r\n                    <MenuItem key={wallet._id} value={wallet._id}>\r\n                      {wallet.gateway}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"accountNumber\"\r\n                label=\"Account Number\"\r\n                value={accountNumber}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                disabled // Disable to prevent manual entry\r\n              />\r\n\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"accountTitle\"\r\n                label=\"Account Title\"\r\n                value={accountTitle}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                disabled // Disable to prevent manual entry\r\n              />\r\n\r\n              <Box display=\"flex\" justifyContent=\"center\" sx={{ marginTop: 2 }}>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!withdrawAmount || !selectedWallet}>\r\n                  Submit Withdraw Request\r\n                </Button>\r\n                <Button variant=\"outlined\" onClick={handleAddWallet} sx={{ marginLeft: 2 }}>\r\n                  Add More Wallet\r\n                </Button>\r\n              </Box>\r\n            </form>\r\n          )}\r\n\r\n          {errorMessage && (\r\n            <Typography variant=\"h6\" color=\"error.main\" sx={{ marginTop: 2, textAlign: 'center' }}>\r\n              {errorMessage}\r\n            </Typography>\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n\r\n      {/* Confirmation Dialog */}\r\n      <Dialog open={dialogOpen} onClose={handleCancel}>\r\n        <DialogTitle>Confirm Withdrawal</DialogTitle>\r\n        <DialogContent>\r\n          {!showSuccess ? (\r\n            <DialogContentText>\r\n              Are you sure you want to withdraw {withdrawAmount} using the selected wallet? This action cannot be undone.\r\n            </DialogContentText>\r\n          ) : (\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.5 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0 }}\r\n              transition={{ duration: 0.5 }}\r\n              style={{ textAlign: 'center', marginTop: 20 }}\r\n            >\r\n              <div style={{\r\n                display: 'inline-flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                width: '70px',\r\n                height: '70px',\r\n                borderRadius: '50%',\r\n                margin: '0 auto',\r\n              }}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"#13E880\"\r\n                  width=\"64px\"\r\n                  height=\"64px\"\r\n                >\r\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"#13E880\" strokeWidth=\"2\" />\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2l4-4\" />\r\n                </svg>\r\n              </div>\r\n              <Typography variant=\"h6\" color=\"success.main\" sx={{ marginTop: 2 }}>\r\n                Your withdrawal request has been submitted and is waiting for approval.\r\n              </Typography>\r\n            </motion.div>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\" disabled={showSuccess}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={showSuccess ? handleCancel : handleConfirm} color=\"primary\">\r\n            {showSuccess ? 'Close' : 'Confirm'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WithdrawBalance;\r\n"],"names":["WithdrawBalance","username","useAuth","navigate","useNavigate","withdrawAmount","setWithdrawAmount","useState","selectedWallet","setSelectedWallet","wallets","setWallets","accountNumber","setAccountNumber","accountTitle","setAccountTitle","errorMessage","setErrorMessage","dialogOpen","setDialogOpen","confirmationData","setConfirmationData","showSuccess","setShowSuccess","withdrawalStatus","setWithdrawalStatus","useEffect","async","response","axios","data","error","console","fetchWallets","withdrawalEnabled","fetchWithdrawalStatus","handleCancel","handleAddWallet","_jsxs","Grid","container","spacing","justifyContent","children","_jsx","item","xs","Card","sx","backgroundColor","color","CardContent","Typography","variant","fontWeight","gutterBottom","textAlign","sm","Paper","elevation","padding","length","Box","display","flexDirection","alignItems","marginBottom","Button","onClick","onSubmit","event","_wallets$find","preventDefault","formData","gateway","find","w","_id","FormControl","fullWidth","margin","InputLabel","id","Select","labelId","value","onChange","e","target","label","MenuItem","walletId","wallet","map","TextField","required","disabled","marginTop","type","marginLeft","Dialog","open","onClose","DialogTitle","DialogContent","motion","initial","opacity","scale","animate","exit","transition","duration","style","width","height","borderRadius","xmlns","fill","viewBox","stroke","cx","cy","r","strokeWidth","strokeLinecap","strokeLinejoin","d","DialogContentText","DialogActions","token","localStorage","getItem","headers","Authorization","log","status","message"],"sourceRoot":""}