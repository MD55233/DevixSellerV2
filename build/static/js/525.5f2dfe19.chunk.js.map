{"version":3,"file":"static/js/525.5f2dfe19.chunk.js","mappings":"4QAUA,MAAMA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAkB,CACxC,2BAA4B,CAC1B,aAAc,CACZE,aAAc,OACdC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAKJ,SAASC,IACtB,MAAOC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,KAChDK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,OAC5BO,EAASC,IAAcR,EAAAA,EAAAA,UAAS,OACjC,SAAES,IAAaC,EAAAA,EAAAA,KACfC,GAAWC,EAAAA,EAAAA,MA2BjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,GAAI,GAAIC,SAAA,EACjBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,iBAAiBC,cAAY,EAAAL,SAAC,qBAG7DJ,EAAAA,EAAAA,MAAA,QAAMU,SA9BWC,UAEnB,GADAC,EAAEC,iBACEzB,IAAgBE,EAIpB,UACQwB,EAAAA,EAAAA,IAAW,4CAAwD,CACvElB,WACAX,kBACAG,gBAEFF,EAAmB,IACnBG,EAAe,IACfE,EAAmB,IACnBE,EAAS,MACTE,EAAW,iCACXoB,YAAW,KACTjB,EAAS,qBAAqB,GAC7B,IAGL,CAFE,MAAOkB,GACPvB,EAASuB,EAAIC,SAASC,KAAKC,QAC7B,MAnBE1B,EAAS,iDAmBX,EAQ+BW,SAAA,EAC3BC,EAAAA,EAAAA,KAAC1B,EAAe,CACdyC,MAAM,mBACNC,KAAK,WACLC,WAAS,EACTC,MAAOtC,EACPuC,SAAWZ,GAAM1B,EAAmB0B,EAAEa,OAAOF,OAC7CG,OAAO,YAETrB,EAAAA,EAAAA,KAAC1B,EAAe,CACdyC,MAAM,eACNC,KAAK,WACLC,WAAS,EACTC,MAAOnC,EACPoC,SAAWZ,GAAMvB,EAAeuB,EAAEa,OAAOF,OACzCG,OAAO,YAETrB,EAAAA,EAAAA,KAAC1B,EAAe,CACdyC,MAAM,uBACNC,KAAK,WACLC,WAAS,EACTC,MAAOjC,EACPkC,SAAWZ,GAAMrB,EAAmBqB,EAAEa,OAAOF,OAC7CG,OAAO,WAERlC,IACCa,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,QAAOJ,SACtCZ,IAGJE,IACCW,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,eAAcJ,SAC1CV,KAGLW,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACN,KAAK,SAASd,QAAQ,YAAYL,GAAI,CAAEC,GAAI,EAAGyB,GAAI,EAAG9C,aAAc,QAASsB,SAAC,yBAM9F,C","sources":["layout/MainLayout/Header/ProfileSection/PasswordChange.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/material/styles';\r\nimport axios from 'axios';\r\nimport { useAuth } from 'views/pages/authentication/AuthContext';\r\n\r\nconst CustomTextField = styled(TextField)({\r\n  '& .MuiOutlinedInput-root': {\r\n    '& fieldset': {\r\n      borderRadius: '20px',\r\n      borderColor: '#8e44ad' // Purple berry color\r\n    },\r\n    '&:hover fieldset': {\r\n      borderColor: '#8e44ad'\r\n    },\r\n    '&.Mui-focused fieldset': {\r\n      borderColor: '#8e44ad'\r\n    }\r\n  }\r\n});\r\n\r\nexport default function ChangePassword() {\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const { username } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmPassword) {\r\n      setError('New password and confirm password do not match');\r\n      return;\r\n    }\r\n    try {\r\n      await axios.put(`${process.env.REACT_APP_API_HOST}/api/change-password`, {\r\n        username,\r\n        currentPassword,\r\n        newPassword\r\n      });\r\n      setCurrentPassword('');\r\n      setNewPassword('');\r\n      setConfirmPassword('');\r\n      setError(null);\r\n      setSuccess('Password changed successfully');\r\n      setTimeout(() => {\r\n        navigate('/dashboard/default');\r\n      }, 2000);\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 5 }}>\r\n      <Typography variant=\"h3\" color=\"secondary.dark\" gutterBottom>\r\n        Change Password\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <CustomTextField\r\n          label=\"Current Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={currentPassword}\r\n          onChange={(e) => setCurrentPassword(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <CustomTextField\r\n          label=\"New Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <CustomTextField\r\n          label=\"Confirm New Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        {error && (\r\n          <Typography variant=\"body1\" color=\"error\">\r\n            {error}\r\n          </Typography>\r\n        )}\r\n        {success && (\r\n          <Typography variant=\"h4\" color=\"success.main\">\r\n            {success}\r\n          </Typography>\r\n        )}\r\n        <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, mb: 2, borderRadius: '14px' }}>\r\n          Change Password\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["CustomTextField","styled","TextField","borderRadius","borderColor","ChangePassword","currentPassword","setCurrentPassword","useState","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","username","useAuth","navigate","useNavigate","_jsxs","Box","sx","mt","children","_jsx","Typography","variant","color","gutterBottom","onSubmit","async","e","preventDefault","axios","setTimeout","err","response","data","message","label","type","fullWidth","value","onChange","target","margin","Button","mb"],"sourceRoot":""}