{"version":3,"file":"static/js/299.1e7c8e7b.chunk.js","mappings":"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","sources":["views/utilities/WithdrawHistory.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  CircularProgress,\r\n  Grid,\r\n  Box,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useAuth } from 'views/pages/authentication/AuthContext';\r\n\r\nconst WithdrawalHistory = () => {\r\n  const { username } = useAuth(); // Get username from auth context\r\n  const [withdrawals, setWithdrawals] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchWithdrawals = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_HOST}/api/withdrawals/${username}`);\r\n\r\n        // Process the response to include the necessary fields\r\n        const withdrawalsData = response.data.map(item => ({\r\n          ...item,\r\n          status: item.status || 'unknown', // Assuming there's a status field, fallback to 'unknown' if not present\r\n        }));\r\n\r\n        // Sort withdrawals by date in descending order\r\n        withdrawalsData.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n\r\n        setWithdrawals(withdrawalsData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching withdrawal history:', error);\r\n        setError('Error fetching withdrawal history. Please try again.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchWithdrawals();\r\n  }, [username]);\r\n\r\n  const getStatusStyles = (status) => {\r\n    switch (status) {\r\n      case 'approved':\r\n        return { backgroundColor: '#d4edda', color: '#155724' }; // Light green background\r\n      case 'rejected':\r\n        return { backgroundColor: '#f8d7da', color: '#721c24' }; // Light red background\r\n      case 'pending':\r\n        return { backgroundColor: '#fff3cd', color: '#856404' }; // Light yellow background\r\n      default:\r\n        return { backgroundColor: '#ffffff', color: '#000000' }; // Default white background\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} justifyContent=\"center\">\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h3\" gutterBottom sx={{ color: 'secondary.main', textAlign: 'center' }}>\r\n          Withdrawal History\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={8}>\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : error ? (\r\n          <Typography color=\"error\" variant=\"h6\">{error}</Typography>\r\n        ) : withdrawals.length === 0 ? (\r\n          <Typography variant=\"h6\">No withdrawals found.</Typography>\r\n        ) : (\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Date</TableCell>\r\n                  <TableCell>Amount</TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                  <TableCell>Account Number</TableCell>\r\n                  <TableCell>Gateway</TableCell>\r\n                  <TableCell>Remarks</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {withdrawals.map((withdrawal) => (\r\n                  <TableRow key={withdrawal._id}>\r\n                    <TableCell>{new Date(withdrawal.createdAt).toLocaleDateString()}</TableCell>\r\n                    <TableCell>Rs,{withdrawal.amount}</TableCell>\r\n                    <TableCell>\r\n                      <Box sx={{\r\n                        ...getStatusStyles(withdrawal.status),\r\n                        padding: '4px 8px',\r\n                        borderRadius: '4px',\r\n                        display: 'inline-block'\r\n                      }}>\r\n                        {withdrawal.status}\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>{withdrawal.accountNumber || '-'}</TableCell>\r\n                    <TableCell>{withdrawal.gateway || '-'}</TableCell>\r\n                    <TableCell>{withdrawal.remarks || '-'}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WithdrawalHistory;\r\n"],"names":["WithdrawalHistory","username","useAuth","withdrawals","setWithdrawals","useState","loading","setLoading","error","setError","useEffect","async","withdrawalsData","axios","data","map","item","status","sort","a","b","Date","createdAt","console","fetchWithdrawals","getStatusStyles","backgroundColor","color","_jsxs","Grid","container","spacing","justifyContent","children","_jsx","xs","Typography","variant","gutterBottom","sx","textAlign","sm","CircularProgress","length","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","withdrawal","toLocaleDateString","amount","Box","padding","borderRadius","display","accountNumber","gateway","remarks","_id"],"sourceRoot":""}