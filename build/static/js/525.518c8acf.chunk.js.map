{"version":3,"file":"static/js/525.518c8acf.chunk.js","mappings":"4QAUA,MAAMA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAkB,CACxC,2BAA4B,CAC1B,aAAc,CACZE,aAAc,OACdC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAKJ,SAASC,IACtB,MAAOC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,KAChDK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,OAC5BO,EAASC,IAAcR,EAAAA,EAAAA,UAAS,OACjC,SAAES,IAAaC,EAAAA,EAAAA,KACfC,GAAWC,EAAAA,EAAAA,MA2BjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,GAAI,GAAIC,SAAA,EACjBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,iBAAiBC,cAAY,EAAAL,SAAC,qBAG7DJ,EAAAA,EAAAA,MAAA,QAAMU,SA9BWC,UAEnB,GADAC,EAAEC,iBACEzB,IAAgBE,EAIpB,UACQwB,EAAAA,EAAAA,IAAW,4CAAwD,CACvElB,WACAX,kBACAG,gBAEFF,EAAmB,IACnBG,EAAe,IACfE,EAAmB,IACnBE,EAAS,MACTE,EAAW,iCACXoB,YAAW,KACTjB,EAAS,qBAAqB,GAC7B,IAGL,CAFE,MAAOkB,GACPvB,EAASuB,EAAIC,SAASC,KAAKC,QAC7B,MAnBE1B,EAAS,iDAmBX,EAQ+BW,SAAA,EAC3BC,EAAAA,EAAAA,KAAC1B,EAAe,CACdyC,MAAM,mBACNC,KAAK,WACLC,WAAS,EACTC,MAAOtC,EACPuC,SAAWZ,GAAM1B,EAAmB0B,EAAEa,OAAOF,OAC7CG,OAAO,YAETrB,EAAAA,EAAAA,KAAC1B,EAAe,CACdyC,MAAM,eACNC,KAAK,WACLC,WAAS,EACTC,MAAOnC,EACPoC,SAAWZ,GAAMvB,EAAeuB,EAAEa,OAAOF,OACzCG,OAAO,YAETrB,EAAAA,EAAAA,KAAC1B,EAAe,CACdyC,MAAM,uBACNC,KAAK,WACLC,WAAS,EACTC,MAAOjC,EACPkC,SAAWZ,GAAMrB,EAAmBqB,EAAEa,OAAOF,OAC7CG,OAAO,WAERlC,IACCa,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,QAAOJ,SACtCZ,IAGJE,IACCW,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,eAAcJ,SAC1CV,KAGLW,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACN,KAAK,SAASd,QAAQ,YAAYL,GAAI,CAAEC,GAAI,EAAGyB,GAAI,EAAG9C,aAAc,QAASsB,SAAC,yBAM9F,C","sources":["layout/MainLayout/Header/ProfileSection/PasswordChange.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport axios from 'axios';\nimport { useAuth } from 'views/pages/authentication/AuthContext';\n\nconst CustomTextField = styled(TextField)({\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderRadius: '20px',\n      borderColor: '#8e44ad' // Purple berry color\n    },\n    '&:hover fieldset': {\n      borderColor: '#8e44ad'\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#8e44ad'\n    }\n  }\n});\n\nexport default function ChangePassword() {\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const { username } = useAuth();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setError('New password and confirm password do not match');\n      return;\n    }\n    try {\n      await axios.put(`${process.env.REACT_APP_API_HOST}/api/change-password`, {\n        username,\n        currentPassword,\n        newPassword\n      });\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n      setError(null);\n      setSuccess('Password changed successfully');\n      setTimeout(() => {\n        navigate('/dashboard/default');\n      }, 2000);\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n\n  return (\n    <Box sx={{ mt: 5 }}>\n      <Typography variant=\"h3\" color=\"secondary.dark\" gutterBottom>\n        Change Password\n      </Typography>\n      <form onSubmit={handleSubmit}>\n        <CustomTextField\n          label=\"Current Password\"\n          type=\"password\"\n          fullWidth\n          value={currentPassword}\n          onChange={(e) => setCurrentPassword(e.target.value)}\n          margin=\"normal\"\n        />\n        <CustomTextField\n          label=\"New Password\"\n          type=\"password\"\n          fullWidth\n          value={newPassword}\n          onChange={(e) => setNewPassword(e.target.value)}\n          margin=\"normal\"\n        />\n        <CustomTextField\n          label=\"Confirm New Password\"\n          type=\"password\"\n          fullWidth\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          margin=\"normal\"\n        />\n        {error && (\n          <Typography variant=\"body1\" color=\"error\">\n            {error}\n          </Typography>\n        )}\n        {success && (\n          <Typography variant=\"h4\" color=\"success.main\">\n            {success}\n          </Typography>\n        )}\n        <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, mb: 2, borderRadius: '14px' }}>\n          Change Password\n        </Button>\n      </form>\n    </Box>\n  );\n}\n"],"names":["CustomTextField","styled","TextField","borderRadius","borderColor","ChangePassword","currentPassword","setCurrentPassword","useState","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","username","useAuth","navigate","useNavigate","_jsxs","Box","sx","mt","children","_jsx","Typography","variant","color","gutterBottom","onSubmit","async","e","preventDefault","axios","setTimeout","err","response","data","message","label","type","fullWidth","value","onChange","target","margin","Button","mb"],"sourceRoot":""}