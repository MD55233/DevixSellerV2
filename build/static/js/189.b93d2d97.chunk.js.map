{"version":3,"file":"static/js/189.b93d2d97.chunk.js","mappings":"yqBA8BA,MAAMA,EAAiB,CACrBC,QAASC,EACTC,SAAUC,EACVC,UAAWC,EACXC,Q,6mZACAC,IAAKC,EACLC,I,y5GACAC,OAAQC,EACRC,I,i9KACAC,OAAQC,EACRC,OAAQC,GAsIV,MAnIwBC,KACtB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,OAChDG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAcvCK,EAAAA,EAAAA,YAAU,KAXmBC,WAC3B,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAU,+CACjCT,EAAYQ,EAASE,KAKvB,CAJE,MAAOC,GACPC,QAAQD,MAAM,mCAAoCA,EACpD,CAAC,QACCN,GAAW,EACb,GAIAQ,EAAsB,GACrB,IAGH,MAAMC,EAAmBC,IACvBC,UAAUC,UAAUC,UAAUH,GAAMI,MAClC,KACEC,MAAM,uBAAuB,IAE9BC,IACCT,QAAQD,MAAM,wBAAyBU,EAAI,GAE9C,EAGH,OACEC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC9BC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,qBAIrCrB,GAECsB,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAEO,QAAS,OAAQC,eAAgB,SAAUC,UAAW,QAASP,UAC3EC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,KAAM,QAI1BR,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEZ,SACxB1B,EAASuC,KAAKC,IACbb,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAElB,UAC9BH,EAAAA,EAAAA,MAACsB,EAAAA,EAAI,CACHrB,MAAO,CACLsB,OAAQ,UACRC,UAAW,kCAEbC,QAASA,IAAM5C,EAAmBoC,GAAUd,SAAA,EAE5CC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRC,UAAU,MACVC,OAAO,MACPC,MAAOvE,EAAe2D,EAAQa,W,yoYAC9BC,IAAKd,EAAQa,SACb7B,MAAO,CAAE+B,UAAW,UAAW9B,QAAS,WAE1CE,EAAAA,EAAAA,KAAC6B,EAAAA,EAAW,CAAA9B,UACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAK4B,MAAM,SAAQ/B,SACpCc,EAAQa,iBAjBqBb,EAAQkB,SA2BnDvD,IACCwB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CACLC,KAAMC,QAAQ1D,GACd2D,QAASA,IAAM1D,EAAmB,MAClC2D,SAAS,KACTC,WAAS,EAAAtC,UAETC,EAAAA,EAAAA,KAACsC,EAAAA,EAAa,CAAAvC,UACZH,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE0C,UAAW,SAAUzC,QAAS,QAASC,SAAA,EACnDC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAEvB,EAAgBkD,YAC1C9B,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLS,UAAW,OACXF,QAAS,OACToC,WAAY,SACZnC,eAAgB,UAChBN,SAAA,EAEFH,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,QAAQL,MAAO,CAAE4C,YAAa,QAAS1C,SAAA,EACzDC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WAAe,IAAEvB,EAAgBkE,iBAE3C1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAU,CAACtB,QAASA,IAAMjC,EAAgBZ,EAAgBkE,cAAc3C,UACvEC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAe,UAGpBhD,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLS,UAAW,OACXF,QAAS,OACToC,WAAY,SACZnC,eAAgB,UAChBN,SAAA,EAEFH,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,QAAQL,MAAO,CAAE4C,YAAa,QAAS1C,SAAA,EACzDC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eAAmB,IAAEvB,EAAgBqE,kBAE/C7C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAU,CAACtB,QAASA,IAAMjC,EAAgBZ,EAAgBqE,eAAe9C,UACxEC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAe,UAGpB5C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,CACL5C,QAAQ,YACR6C,MAAM,UACNlD,MAAO,CAAES,UAAW,QACpBe,QAASA,IAAM5C,EAAmB,MAAMsB,SACzC,mBAOL,C","sources":["views/utilities/PaymentAccounts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  CircularProgress,\r\n  IconButton,\r\n  Grid,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\n\r\n// Import images\r\nimport SadaPayImage from './accountimg/sadapay.png';\r\nimport JazzCashImage from './accountimg/jazzcash.png';\r\nimport EasyPaisaImage from './accountimg/easypaisa.png';\r\nimport NayaPayImage from './accountimg/nayapay.png';\r\nimport UBLImage from './accountimg/ubl.png';\r\nimport HBLImage from './accountimg/hbl.png';\r\nimport UPaisaImage from './accountimg/upaisa.png';\r\nimport MCBImage from './accountimg/mcb.png';\r\nimport AlliedImage from './accountimg/allied.png';\r\nimport MeezanImage from './accountimg/meezan.png';\r\nimport DefaultImage from './accountimg/default.png';\r\n\r\n// Map images to platforms\r\nconst platformImages = {\r\n  SadaPay: SadaPayImage,\r\n  JazzCash: JazzCashImage,\r\n  EasyPaisa: EasyPaisaImage,\r\n  NayaPay: NayaPayImage,\r\n  UBL: UBLImage,\r\n  HBL: HBLImage,\r\n  UPaisa: UPaisaImage,\r\n  MCB: MCBImage,\r\n  Allied: AlliedImage,\r\n  Meezan: MeezanImage,\r\n};\r\n\r\nconst PaymentAccounts = () => {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [selectedAccount, setSelectedAccount] = useState(null); // For modal/dialog\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n\r\n  // Fetch all payment accounts\r\n  const fetchPaymentAccounts = async () => {\r\n    try {\r\n      const response = await axios.get('https://api1.laikostar.com/payment-accounts'); // Replace with your actual API endpoint\r\n      setAccounts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching payment accounts:', error);\r\n    } finally {\r\n      setLoading(false); // Set loading to false after data is fetched\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPaymentAccounts();\r\n  }, []);\r\n\r\n  // Function to copy text to clipboard\r\n  const copyToClipboard = (text) => {\r\n    navigator.clipboard.writeText(text).then(\r\n      () => {\r\n        alert('Copied to clipboard!');\r\n      },\r\n      (err) => {\r\n        console.error('Failed to copy text: ', err);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Payment Accounts\r\n      </Typography>\r\n\r\n      {loading ? (\r\n        // Show loading spinner while data is being fetched\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: '50px' }}>\r\n          <CircularProgress size={50} />\r\n        </div>\r\n      ) : (\r\n        // Show list of cards\r\n        <Grid container spacing={2}>\r\n          {accounts.map((account) => (\r\n            <Grid item xs={12} sm={6} md={4} key={account._id}>\r\n              <Card\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)',\r\n                }}\r\n                onClick={() => setSelectedAccount(account)} // Open modal on click\r\n              >\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"140\"\r\n                  image={platformImages[account.platform] || DefaultImage}\r\n                  alt={account.platform}\r\n                  style={{ objectFit: 'contain', padding: '10px' }}\r\n                />\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    {account.platform}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n\r\n      {/* Dialog to show account details */}\r\n      {selectedAccount && (\r\n        <Dialog\r\n          open={Boolean(selectedAccount)}\r\n          onClose={() => setSelectedAccount(null)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogContent>\r\n            <div style={{ textAlign: 'center', padding: '20px' }}>\r\n              <Typography variant=\"h5\">{selectedAccount.platform}</Typography>\r\n              <div\r\n                style={{\r\n                  marginTop: '10px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <Typography variant=\"body1\" style={{ marginRight: '10px' }}>\r\n                  <strong>Title:</strong> {selectedAccount.accountTitle}\r\n                </Typography>\r\n                <IconButton onClick={() => copyToClipboard(selectedAccount.accountTitle)}>\r\n                  <ContentCopyIcon />\r\n                </IconButton>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  marginTop: '10px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <Typography variant=\"body1\" style={{ marginRight: '10px' }}>\r\n                  <strong>Account #:</strong> {selectedAccount.accountNumber}\r\n                </Typography>\r\n                <IconButton onClick={() => copyToClipboard(selectedAccount.accountNumber)}>\r\n                  <ContentCopyIcon />\r\n                </IconButton>\r\n              </div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ marginTop: '20px' }}\r\n                onClick={() => setSelectedAccount(null)}\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentAccounts;\r\n"],"names":["platformImages","SadaPay","SadaPayImage","JazzCash","JazzCashImage","EasyPaisa","EasyPaisaImage","NayaPay","UBL","UBLImage","HBL","UPaisa","UPaisaImage","MCB","Allied","AlliedImage","Meezan","MeezanImage","PaymentAccounts","accounts","setAccounts","useState","selectedAccount","setSelectedAccount","loading","setLoading","useEffect","async","response","axios","data","error","console","fetchPaymentAccounts","copyToClipboard","text","navigator","clipboard","writeText","then","alert","err","_jsxs","style","padding","children","_jsx","Typography","variant","gutterBottom","display","justifyContent","marginTop","CircularProgress","size","Grid","container","spacing","map","account","item","xs","sm","md","Card","cursor","boxShadow","onClick","CardMedia","component","height","image","platform","alt","objectFit","CardContent","align","_id","Dialog","open","Boolean","onClose","maxWidth","fullWidth","DialogContent","textAlign","alignItems","marginRight","accountTitle","IconButton","ContentCopyIcon","accountNumber","Button","color"],"sourceRoot":""}