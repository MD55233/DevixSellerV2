{"version":3,"file":"static/js/334.727d79b1.chunk.js","mappings":"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","sources":["ui-component/cards/CompanyCard.js","ui-component/cards/Skeleton/EarningCard.js","../node_modules/@mui/icons-material/esm/ArrowBack.js","views/pages/invest/InvestCard.js","views/pages/invest/Invest.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box, Grid } from '@mui/material';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n  backgroundColor: theme.palette.secondary.dark,\n  color: '#fff',\n  overflow: 'hidden',\n  position: 'relative',\n  paddingTop: '5%',\n  paddingBottom: '5%',\n  paddingLeft: '10%',\n  height: '100%',\n  cursor: 'pointer',\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: theme.palette.secondary[800],\n    borderRadius: '50%',\n    top: -85,\n    right: -95,\n    [theme.breakpoints.down('sm')]: {\n      top: -105,\n      right: -140\n    }\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: theme.palette.secondary[800],\n    borderRadius: '50%',\n    top: -125,\n    right: -15,\n    opacity: 0.5,\n    [theme.breakpoints.down('sm')]: {\n      top: -155,\n      right: -70\n    }\n  }\n}));\n\nconst CompanyCard = ({ isLoading, children, onClick }) => {\n  return (\n    <>\n      {isLoading ? (\n        <SkeletonEarningCard />\n      ) : (\n        <CardWrapper border={false} content={false} onClick={onClick}>\n          <Box sx={{ p: 2.25 }}>\n            <Grid container direction=\"column\">\n              <Grid item>\n                <Grid container justifyContent=\"space-between\">\n                  {children}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n        </CardWrapper>\n      )}\n    </>\n  );\n};\n\nCompanyCard.propTypes = {\n  isLoading: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func\n};\n\nexport default CompanyCard;\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// ==============================|| SKELETON - EARNING CARD ||============================== //\n\nconst EarningCard = () => (\n  <Card>\n    <CardContent>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <Grid container justifyContent=\"space-between\">\n            <Grid item>\n              <Skeleton variant=\"rectangular\" width={44} height={44} />\n            </Grid>\n            <Grid item>\n              <Skeleton variant=\"rectangular\" width={34} height={34} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\n        </Grid>\n        <Grid item>\n          <Skeleton variant=\"rectangular\" height={30} />\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n);\n\nexport default EarningCard;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography, Box, Button, CircularProgress } from '@mui/material';\nimport CompanyCard from 'ui-component/cards/CompanyCard';\n\nconst InvestCard = ({ plan, onClick, isLoading }) => {\n  const { name, price, parent, grandParent } = plan;\n\n  return (\n    <CompanyCard onClick={onClick}>\n      {isLoading ? (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n          <CircularProgress />\n        </Box>\n      ) : (\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Typography variant=\"h3\" sx={{ color: '#fff', mb: 2 }}>\n            {name}\n          </Typography>\n          <Typography variant=\"h3\" sx={{ color: '#fff', mb: 1 }}>\n            Price: pkr {price}\n          </Typography>\n          <Typography variant=\"h4\" sx={{ color: '#fff', mb: 1 }}>\n            Direct: {parent * 100}%\n          </Typography>\n          <Typography variant=\"h4\" sx={{ color: '#fff', mb: 1 }}>\n            Indirect: {grandParent * 100}%\n          </Typography>\n          <Button variant=\"contained\" color=\"primary\">\n            Choose\n          </Button>\n        </Box>\n      )}\n    </CompanyCard>\n  );\n};\n\nInvestCard.propTypes = {\n  plan: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    parent: PropTypes.number.isRequired,\n    grandParent: PropTypes.number.isRequired\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired\n};\n\nexport default InvestCard;\n","import React, { useState, useEffect } from 'react';\nimport { Typography, Grid, IconButton, Box } from '@mui/material';\nimport axios from 'axios';\nimport { ArrowBack } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport InvestCard from './InvestCard';\n\nconst Invest = () => {\n  const [plans, setPlans] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`${process.env.REACT_APP_API_HOST}/api/plans`)\n      .then((response) => {\n        setPlans(response.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('There was an error fetching the plans!', error);\n        setLoading(false);\n      });\n  }, []);\n\n  const handlePlanClick = (plan) => {\n    // Store plan in a persistent state\n    localStorage.setItem('selectedPlan', JSON.stringify(plan));\n    navigate('/payments/referral/upload');\n  };\n\n  return (\n    <div>\n      <Box display=\"flex\" alignItems=\"center\" mb={3}>\n        <IconButton onClick={() => navigate(-1)} color=\"primary\">\n          <ArrowBack />\n        </IconButton>\n        <Typography variant=\"h3\" gutterBottom sx={{ marginLeft: 2, paddingTop: '7px', color: 'secondary.dark' }}>\n          Choose Investment Plan for Referral\n        </Typography>\n      </Box>\n      <Grid container spacing={3}>\n        {plans.map((plan, index) => (\n          <Grid item xs={12} sm={6} md={4} key={index}>\n            <InvestCard plan={plan} onClick={() => handlePlanClick(plan)} isLoading={loading} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Invest;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g. '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;"],"names":["CardWrapper","styled","MainCard","_ref","theme","backgroundColor","palette","secondary","dark","color","overflow","position","paddingTop","paddingBottom","paddingLeft","height","cursor","content","width","background","borderRadius","top","right","breakpoints","down","opacity","_ref2","isLoading","children","onClick","_jsx","_Fragment","SkeletonEarningCard","border","Box","sx","p","Grid","container","direction","item","justifyContent","EarningCard","Card","CardContent","_jsxs","Skeleton","variant","my","createSvgIcon","d","plan","name","price","parent","grandParent","CompanyCard","display","alignItems","CircularProgress","flexDirection","Typography","mb","Button","Invest","plans","setPlans","useState","loading","setLoading","navigate","useNavigate","useEffect","axios","then","response","data","catch","error","console","IconButton","ArrowBack","gutterBottom","marginLeft","spacing","map","index","xs","sm","md","InvestCard","localStorage","setItem","JSON","stringify","handlePlanClick","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_t","_t2","_t3","_t4","_","t","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","overridesResolver","props","styles","ownerState","root","capitalize","_extends","transition","transitions","create","vars","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","React","inProps","ref","useThemeProps","className","size","style","thickness","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","role","viewBox","cx","cy","r","fill","strokeWidth","getUnit","input","String","match","toUnitless","length","parseFloat","getSkeletonUtilityClass","pulseKeyframe","waveKeyframe","SkeletonRoot","animation","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","shape","radiusValue","bg","alpha","text","primary","mode","marginTop","marginBottom","transformOrigin","visibility","maxWidth","action","hover","component","Boolean","as"],"sourceRoot":""}